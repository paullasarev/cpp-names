#summary Project actual state and dashboard

<wiki:toc max_depth="1" />

=Design and technologies=

Desing principles:
 * [http://en.wikipedia.org/wiki/Test-driven_development Test driven development]
 * [http://en.wikipedia.org/wiki/Mock_object Mocking conception]
  * [http://www.jmock.org/oopsla2004.pdf Martin Fauler: Mock Roles, not Objects]
  * [http://en.wikipedia.org/wiki/Behavior_Driven_Development Behaviour mocking]

Instruments:
 * [http://members.home.nl/rutger.van.beusekom/ Yaffut] C++ unit testing engine
 * [http://www.assembla.com/spaces/hippomocks Hippomocks] C++ mock engine
  * [http://www.hippomocks.com/wiki/index.php/Special:AllPages wiki tutorial]
  * [http://www.assembla.com/spaces/hippomocks/wiki/Tutorial_3_0 slightly outdated tutorial]
  * [https://github.com/bigeasy/hippomocks actual sources]
 * [http://flex.sourceforge.net/ Flex lexer]
 * [http://www.gnu.org/s/bison/manual/html_node/index.html Bison parser]

Useful materials:
 * [http://www.lysator.liu.se/c/ANSI-C-grammar-y.html ANSI C Yacc grammar]

=Realised features=

Infrastructure:
 * *[Database]* facade
 * *DirectoryTree* file system traverser
 * *FileScanner* interface
 * *NameToCsv* trivial realisation
 * *CommandLine* string argument vector processor
 * *CppFlexScanner* 
 * *CppBisonParser*
 * *CppScanner* realisation of FileScanner interface

Cpp parser (this is just a list of unit tests names):
 * !EmptyContent
 * !OneNamespace
 * !NestedNamespace
 * !AnonymouseNamespace
 * !FunctionDeclaration
 * !FunctionInNamespace
 * !QualifiedFunction
 * !UnQualifiedFunction
 * !UnQualifiedNamespaceFunction
 * !QualifiedParameter
 * !QualifiedReturnType
 * !PointerReturnType
 * !ReferenceType
 * !ConstType
 * !ConstPointerType
 * !FunctionDefinition
 * !FunctionBrackets
 * !LineComment
 * !LineCommentInFunction
 * !StreamComment
 * !StreamCommentInFunction
 * !ClassForwardDeclaration
 * !StructForwardDeclaration
 * !NamespaceForwardDeclaration
 * !EmptyClassDefinition
 * !ClassMethodDefinition  (method body is not parsed and is recognized lexycally, as one token)
 * !ClassMethodDeclaration
 * !InnerClassDeclaration
 * !ConstClassMethodDeclaration

 
=Planned  features=

Cpp parser:
 * !PrivatePublicProtectedMembers
 * !EnumDeclaration
 * !TemplateDeclaration
 * !SpecializedTemplate
 * !PreprocessorDefine
 * !PreprocessorIfdef
 * !PreprocessorIf
 * !PreprocessorInclude